export PYTHONPATH=/Library/Frameworks/Python.framework/Python
export ABSROOT=$HOME/src/arch/abs/
# virtualenvwrapper working directory
export WORKON_HOME=$HOME/srv/python-environments
# pip options (aware of virtualenv)
export PIP_VIRTUALENV_BASE=$WORKON_HOME
export PIP_RESPECT_VIRTUALENV=true

# Is it a 256 color term ?
if [[ "${COLORTERM}" == "gnome-terminal"  ]]; then
	if [[ -e /usr/share/terminfo/x/xterm-256color || -e /lib/terminfo/x/xterm-256color ]]; then
		export TERM="xterm-256color"
	else
		export TERM='xterm-color'
	fi
elif [[ "${COLORTERM}" == "rxvt-xpm" ]]; then
	if [[ "${TERM}" == "screen" ]]; then
		if [ -e /usr/share/terminfo/s/screen-256color ]; then
			export TERM="screen-256color"
		fi
	fi
fi
# OSX Hack
if [[ $(uname) == 'Darwin' ]]; then
	if [[ "${TERM}" == "xterm" ]]; then
		export TERM="xterm-256color"
	fi
fi

# SSH agent(s)
SSH_ENV=$HOME/.ssh/environment

function start_agent {
     echo "Initialising new SSH agent..."
     /usr/bin/ssh-agent | sed 's/^echo/#echo/' >! ${SSH_ENV}
     chmod 600 ${SSH_ENV}
     . ${SSH_ENV} > /dev/null
     /usr/bin/ssh-add;
}

# Source SSH settings, if applicable
if [[ -f /usr/bin/keychain || -f /usr/local/bin/keychain ]]; then
	eval `keychain --eval id_rsa`
elif [[ -f "${SSH_ENV}" ]]; then
     . ${SSH_ENV} > /dev/null
     ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent > /dev/null || {
         start_agent;
     }
else
     start_agent;
fi

# Man with colors ?
if [[ -f /usr/bin/most ]]; then
	export MANPAGER="/usr/bin/most -s"
fi

# Virtual env
if [[ -f /usr/bin/virtualenvwrapper.sh ]]; then
	# Gentoo place it there
	source /usr/bin/virtualenvwrapper.sh
elif [[ -f /usr/local/bin/virtualenvwrapper.sh ]]; then
	# Mac OSX place it there and pip
	source /usr/local/bin/virtualenvwrapper.sh
elif [[ -f /Library/Frameworks/Python.framework/Versions/2.7/bin/virtualenvwrapper.sh ]]; then
	# Mac OSX HACK
	export VIRTUALENVWRAPPER_PYTHON=/Library/Frameworks/Python.framework/Versions/2.7/bin/python
	source /Library/Frameworks/Python.framework/Versions/2.7/bin/virtualenvwrapper.sh
elif [[ -f /etc/bash_completion.d/virtualenvwrapper ]]; then
	# Ubuntu (debianÂ ?) package place it there
	source /etc/bash_completion.d/virtualenvwrapper
fi
